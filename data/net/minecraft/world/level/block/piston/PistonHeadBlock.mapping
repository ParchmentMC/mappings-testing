CLASS net/minecraft/world/level/block/piston/PistonHeadBlock
	METHOD calculateShape (Lnet/minecraft/core/Direction;Z)Lnet/minecraft/world/phys/shapes/VoxelShape;
		ARG 0 direction
		ARG 1 shortArm
	METHOD canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z
		ARG 1 state
		ARG 2 level
		ARG 3 pos
	METHOD createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V
		ARG 1 builder
	METHOD getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape;
		ARG 1 state
		ARG 2 level
		ARG 3 pos
		ARG 4 context
	METHOD isFittingBase (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Z
		ARG 1 baseState
		ARG 2 extendedState
	METHOD lambda$makeShapes$0 (ZLnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/shapes/VoxelShape;
		ARG 1 dir
	METHOD lambda$makeShapes$1 (I)[Lnet/minecraft/world/phys/shapes/VoxelShape;
		ARG 0 size
	METHOD makeShapes (Z)[Lnet/minecraft/world/phys/shapes/VoxelShape;
		ARG 0 extended
	METHOD mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState;
		ARG 1 state
		ARG 2 mirror
	METHOD onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V
		ARG 1 state
		ARG 2 level
		ARG 3 pos
		ARG 4 newState
		ARG 5 isMoving
	METHOD rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState;
		ARG 1 state
		ARG 2 rot
	METHOD useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z
		ARG 1 state
