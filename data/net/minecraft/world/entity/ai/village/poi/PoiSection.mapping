CLASS net/minecraft/world/entity/ai/village/poi/PoiSection
	METHOD <init> (Ljava/lang/Runnable;)V
		ARG 1 setDirty
	METHOD <init> (Ljava/lang/Runnable;ZLjava/util/List;)V
		ARG 1 setDirty
		ARG 2 isValid
		ARG 3 records
	METHOD add (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Holder;)V
		ARG 1 pos
		ARG 2 type
	METHOD add (Lnet/minecraft/world/entity/ai/village/poi/PoiRecord;)Z
		ARG 1 record
	METHOD exists (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z
		ARG 1 pos
		ARG 2 typePredicate
	METHOD getFreeTickets (Lnet/minecraft/core/BlockPos;)I
		ARG 1 pos
	METHOD getPoiRecord (Lnet/minecraft/core/BlockPos;)Ljava/util/Optional;
		ARG 1 pos
	METHOD getRecords (Ljava/util/function/Predicate;Lnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/stream/Stream;
		ARG 1 typePredicate
		ARG 2 status
	METHOD getType (Lnet/minecraft/core/BlockPos;)Ljava/util/Optional;
		ARG 1 pos
	METHOD refresh (Ljava/util/function/Consumer;)V
		ARG 1 posToTypeConsumer
	METHOD release (Lnet/minecraft/core/BlockPos;)Z
		ARG 1 pos
	METHOD remove (Lnet/minecraft/core/BlockPos;)V
		ARG 1 pos
	CLASS Packed
		METHOD lambda$static$0 (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;
			ARG 0 instance
		METHOD unpack (Ljava/lang/Runnable;)Lnet/minecraft/world/entity/ai/village/poi/PoiSection;
			ARG 1 setDirty
